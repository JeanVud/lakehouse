{{- $nodeSelector := or .Values.scheduler.nodeSelector .Values.nodeSelector }}
{{- $tolerations := or .Values.scheduler.tolerations .Values.tolerations }}
kind: Deployment
apiVersion: apps/v1
metadata:
  name: {{ .Release.Name }}-dag-processor
  labels:
    tier: datalake
    component: dag-processor
    release: {{ .Release.Name }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    heritage: {{ .Release.Service }}
{{- with .Values.labels }}
{{ toYaml . | indent 4 }}
{{- end }}
spec:
  replicas: {{ .Values.dagProcessor.replica }}
  selector:
    matchLabels:
      tier: datalake
      component: dag-processor
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        tier: datalake
        component: dag-processor
        release: {{ .Release.Name }}
{{- with .Values.labels }}
{{ toYaml . | indent 8 }}
{{- end }}
    spec:
      serviceAccountName: {{ .Values.airflowKsa | default "airflow" }}
      nodeSelector:
{{ toYaml $nodeSelector | indent 8 }}
      tolerations:
{{ toYaml $tolerations | indent 8 }}
      restartPolicy: Always
      imagePullSecrets:
        - name: {{ .Values.registry.secretName }}
      initContainers:
      - name: wait-for-db-migrations
        image: {{ template "scheduler_image" . }}
        command: ["sh", "-c"]
        args:
          - until nc -zv movement-db.{{ .Release.Namespace }}.svc.cluster.local {{ .Values.database.port }}; do echo waiting for airflow db; sleep 2; done;
            airflow db check-migrations --migration-wait-timeout={{ .Values.jobs.migrateDb.waitTimeout }};
        env:
        - name: AIRFLOW__LOGGING__LOGGING_LEVEL
          value: WARNING
        envFrom:
          - configMapRef:
              name: {{ .Release.Name }}-env-config
      containers:
      - name: dag-processor
        image: {{ template "scheduler_image" . }}
        imagePullPolicy: {{ .Values.dagProcessor.image.pullPolicy | default .Values.image.pullPolicy | quote }}
        {{- if .Values.dagProcessor.command }}
        command: {{ tpl (toYaml .Values.dagProcessor.command) . | nindent 12 }}
        {{- end }}
        {{- if .Values.dagProcessor.args }}
        args: {{ tpl (toYaml .Values.dagProcessor.args) . | nindent 12 }}
        {{- end }}
        env: []
        envFrom:
          - configMapRef:
              name: {{ .Release.Name }}-env-config
        volumeMounts:
        {{- if .Values.airflowConfigFile }}
        - name: config
          mountPath: {{ template "airflow_config_path" . }}
          subPath: airflow.cfg
          readOnly: true
        {{- end }}
      volumes:
      {{- if .Values.airflowConfigFile }}
      - name: config
        configMap:
          name: {{ .Release.Name }}-config
      {{- end }}
            
